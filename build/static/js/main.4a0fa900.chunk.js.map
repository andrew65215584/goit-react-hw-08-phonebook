{"version":3,"sources":["redux/actions.js","redux/auth/authOperation.js","redux/auth/authActions.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/AvatarAndName/AvatarAndName.js","components/LogAndRegister/LogAndRegister.js","components/Header/Navigation.js","components/Header/Header.js","components/App.js","redux/auth/authReducers.js","redux/reducers.js","redux/store.js","index.js"],"names":["getFormValueFetch","createAction","getFormValueSuccess","getFormValueError","getFormValue","deleteContact","getFilterValue","setFilteredArr","setLocalData","setNotify","removeFilteredArr","getDBFetch","getDBSuccess","getDBError","axios","defaults","baseURL","token","headers","common","Authorization","postUserInfo","param","dispatch","getstaate","a","postUserInfoFetch","post","registerUser","data","postUserInfoSuccess","console","log","postUserInfoError","loginUser","loginUserFetch","loginUserSuccess","localStorage","setItem","loginUserError","logOut","getstate","logoutUserFetch","logoutUserSuccess","logoutUserError","getCurrentUser","persistedToken","auth","get","response","getCurrentUserSuccess","connect","state","isAuthenticated","Component","component","routeProps","render","props","to","restricted","AvatarAndName","useDispatch","name","useSelector","user","className","onClick","LogAndRegister","Navigation","Header","Home","lazy","Contacts","Login","Register","useEffect","fallback","path","initialState","email","authReducer","createReducer","payload","phonebookReducer","contacts","items","filter","isLoading","contact","id","filteredItems","el","toLowerCase","includes","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","phonebook","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4a0fa900.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const getFormValueFetch = createAction('phonebook/GET_FORM_VALUE_Fetch');\nexport const getFormValueSuccess = createAction(\n  'phonebook/GET_FORM_VALUE_Success',\n);\nexport const getFormValueError = createAction('phonebook/GET_FORM_VALUE_Error');\n\nexport const getFormValue = createAction('phonebook/GET_FORM_VALUE');\n\nexport const deleteContact = createAction('phonebook/DELETE_CONTACT');\nexport const getFilterValue = createAction('phonebook/GET_FILTER_VALUE');\nexport const setFilteredArr = createAction('phonebook/SET_FILTERED_ARR');\nexport const setLocalData = createAction('phonebook/SET_LOCAL_DATA');\nexport const setNotify = createAction('phonebook/SET_NOTIFY');\nexport const removeFilteredArr = createAction('phonebook/REMOVE_FILTERED_ARR');\n\n\n\nexport const getDBFetch = createAction('phonebook/GET_DB_Fetch');\nexport const getDBSuccess = createAction(\n  'phonebook/GET_DB_Success',\n);\nexport const getDBError = createAction('phonebook/GET_DB_Error');\n\n\n","import axios from 'axios';\r\nimport { getDBSuccess } from '../actions';\r\nimport {\r\n  postUserInfoFetch,\r\n  postUserInfoSuccess,\r\n  postUserInfoError,\r\n  loginUserSuccess,\r\n  loginUserFetch,\r\n  loginUserError,\r\n  logoutUserFetch,\r\n  logoutUserSuccess,\r\n  logoutUserError,\r\n  \r\n  getCurrentUserSuccess,\r\n \r\n} from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n// зарегистрировать одного пользователя\r\n\r\nexport const postUserInfo = param => async (dispatch, getstaate) => {\r\n  \r\n  dispatch(postUserInfoFetch());\r\n\r\n  try {\r\n    const registerUser = await axios.post('/users/signup', param);\r\n\r\n    \r\n    token.set(registerUser.data);\r\n    dispatch(postUserInfoSuccess(registerUser.data));\r\n  } catch (e) {\r\n    console.log(e);\r\n\r\n    dispatch(postUserInfoError(e));\r\n  }\r\n};\r\n\r\n// Залогинитьь\r\nexport const loginUser = param => async (dispatch, getstaate) => {\r\n  \r\n  dispatch(loginUserFetch());\r\n\r\n  try {\r\n    const loginUser = await axios.post('/users/login', param);\r\n\r\n    \r\n     token.set(loginUser.data.token);\r\n    dispatch(loginUserSuccess(loginUser.data));\r\n\r\n\r\n    localStorage.setItem('tokenLocal', loginUser.data.token);\r\n\r\n\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n\r\n    dispatch(loginUserError(e));\r\n  }\r\n};\r\n\r\n// Разлогинить\r\n\r\nexport const logOut = param => async (dispatch, getstate) => {\r\n  dispatch(logoutUserFetch());\r\n  \r\n\r\n  try {\r\n   await axios.post('/users/logout');\r\n\r\n    token.unset()\r\n    dispatch(logoutUserSuccess());\r\n    // localStorage.setItem('tokenLocal', '');\r\n    \r\n  } catch (error) {\r\n    dispatch(logoutUserError(error))\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n// Получить инфу о текущем пользователе\r\n \r\n\r\n\r\nexport const getCurrentUser = param => async (dispatch, getstate) => {\r\n  \r\n  const { auth: { token: persistedToken, } } = getstate();\r\n  \r\n  if (!persistedToken) {\r\n    return\r\n  } \r\n\r\n\r\n\r\n  token.set(persistedToken);\r\n\r\n  \r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    \r\n    dispatch(getCurrentUserSuccess(response.data));\r\n     const data = await axios.get(`/contacts`);\r\n     dispatch(getDBSuccess(data.data));\r\n\r\n  } catch (error) {\r\n    \r\n  }\r\n\r\n  \r\n}\r\n \r\n\r\n// export const getCurrentUser = param => async (dispatch, getstate) => {\r\n//   const tokenLocal = localStorage.getItem('tokenLocal');\r\n//   \r\n//   if (!tokenLocal) {\r\n//     return\r\n//   } \r\n//   token.set(tokenLocal);\r\n//   const user = await axios.get('/users/current')\r\n\r\n\r\n//   dispatch(getCurrentUserSuccess(user.data));\r\n// };","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const postUserInfoFetch = createAction('auth/REGISTER_USER_Fetch');\r\nexport const postUserInfoSuccess = createAction(\r\n  'auth/REGISTER_USER_Success',\r\n);\r\nexport const postUserInfoError = createAction('auth/REGISTER_USER_Error');\r\n\r\n\r\nexport const loginUserFetch = createAction('auth/LOGIN_USER_Fetch');\r\n\r\nexport const loginUserSuccess = createAction('auth/LOGIN_USER_Success');\r\n\r\nexport const loginUserError = createAction('auth/LOGIN_USER_Error');\r\n\r\n\r\n\r\n\r\nexport const logoutUserFetch = createAction('auth/LOGOUT_USER_Fetch');\r\n\r\nexport const logoutUserSuccess = createAction('auth/LOGOUT_USER_Success');\r\n\r\nexport const logoutUserError = createAction('auth/LOGOUT_USER_Error');\r\n\r\n\r\n\r\nexport const getCurrentUserFetch = createAction('auth/GET_CURRENT_USER_Fetch');\r\n\r\nexport const getCurrentUserSuccess = createAction('auth/GET_CURREN_USER_Success');\r\n\r\nexport const getCurrentUserError = createAction('auth/GET_CURREN_USER_Error');\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// import { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.token,\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.token,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport '../Header/navigation.css'\r\nimport {logOut} from '../../redux/auth/authOperation'\r\n\r\n\r\nfunction AvatarAndName() {\r\n    const dispatch = useDispatch()\r\n    const name = useSelector(state => state.auth.user.name)\r\n\r\n    const handleClick = () => {\r\n        dispatch(logOut());\r\n        \r\n    }\r\n    return (\r\n      <div className=\"avatar-container\">\r\n        <span>Вы вошли как {name} </span>\r\n        <button onClick={handleClick}>Выйти</button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AvatarAndName\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"../Header/navigation.css\"\r\n\r\nfunction LogAndRegister() {\r\n    return (\r\n      <ul className=\"nav-list log-list\">\r\n        <li className=\"nav-link\">\r\n          <NavLink to=\"/login\" className=\"nav-link-item\">\r\n            Войти\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-link\">\r\n          <NavLink to=\"/register\" className=\"nav-link-item\">\r\n            Зарегистрироватся\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default LogAndRegister\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigation.css';\r\nconst Navigation = () => {\r\n  const token = useSelector(state => state.auth.token);\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav-list\">\r\n        <li className=\"nav-link\">\r\n          <NavLink to=\"/home\" className=\"nav-link-item\">\r\n            Главная\r\n          </NavLink>\r\n        </li>\r\n        {token && (\r\n          <li className=\"nav-link\">\r\n            <NavLink to=\"/contacts\" className=\"nav-link-item\">\r\n              Контакты\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: state.auth.token,\r\n// });\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AvatarAndName from '../AvatarAndName/AvatarAndName';\r\nimport LogAndRegister from '../LogAndRegister/LogAndRegister';\r\nimport Navigation from './Navigation';\r\nimport './navigation.css';\r\n\r\nconst Header = () => {\r\n  const token = useSelector(state => state.auth.token);\r\n  return (\r\n    <header className=\"header\">\r\n      <Navigation />\r\n\r\n      {token ? <AvatarAndName /> : <LogAndRegister />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Suspense, useEffect, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute/PrivateRoute';\nimport PublicRoute from './PublicRoute/PublicRoute';\n// import Contacts from '../view/contacts';\n// import Home from '../view/home';\n// import Register from '../view/register';\n// import Login from '../view/login';\nimport Header from './Header/Header';\n\nimport { getCurrentUser } from '../redux/auth/authOperation';\nimport { connect } from 'react-redux';\n\n\nconst Home = lazy(() => import('../view/home'));\nconst Contacts = lazy(() => import('../view/contacts'));\nconst Login = lazy(() => import('../view/login'));\nconst Register = lazy(() => import('../view/register'));\n\nfunction App({ getCurrentUser, isAuthenticated }) {\n  useEffect(() => {\n    getCurrentUser();\n  }, [getCurrentUser]);\n\n  return (\n    <>\n      <Header />\n      <Suspense fallback={<h3>Загружаем...</h3>}>\n        <Switch>\n          <Route path=\"/home\" component={Home} />\n\n          <PrivateRoute path=\"/contacts\" component={Contacts} />\n\n          <PublicRoute restricted path=\"/login\" component={Login} />\n          <PublicRoute restricted path=\"/register\" component={Register} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n\nexport default connect(null, { getCurrentUser })(App);\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n \r\n  postUserInfoSuccess,\r\n \r\n  loginUserSuccess,\r\n  logoutUserSuccess,\r\n  getCurrentUserSuccess,\r\n} from './authActions';\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: '',\r\n    email: '',\r\n  },\r\n\r\n\r\n  //   token: null,\r\n  // isLoading: false,\r\n};\r\n\r\nexport const authReducer = createReducer(initialState, {\r\n  [getCurrentUserSuccess]: (state, { payload }) => {\r\n    \r\n    return {\r\n      ...state,\r\n      user: {\r\n        ...payload,\r\n      },\r\n    };\r\n  },\r\n\r\n  [postUserInfoSuccess]: (state, { payload }) => ({\r\n    ...state,\r\n    user: {\r\n      ...payload.user,\r\n    },\r\n    token: payload.token,\r\n  }),\r\n\r\n  [loginUserSuccess]: (state, { payload }) => ({\r\n    ...state,\r\n    user: {\r\n      ...payload.user,\r\n    },\r\n    token: payload.token,\r\n  }),\r\n\r\n  [logoutUserSuccess]: (state, { payload }) => ({\r\n    ...initialState,\r\n  }),\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  getFormValue,\n  getFormValueFetch,\n  getFormValueSuccess,\n  deleteContact,\n  getFilterValue,\n  setFilteredArr,\n  setLocalData,\n  setNotify,\n  removeFilteredArr,\n  getDBSuccess\n} from './actions';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n  isLoading: false,\n};\n\nexport const phonebookReducer = createReducer(initialState, {\n\n\n\n [getDBSuccess]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: [...state.contacts.items, ...payload],\n    },\n  }),\n\n\n  [getFormValue]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: [...payload],\n    },\n  }),\n\n  [getFormValueFetch]: (state, { payload }) => ({\n    ...state,\n    isLoading: !state.isLoading,\n  }),\n\n  [getFormValueSuccess]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: [...state.contacts.items, payload],\n    },\n  }),\n\n  [deleteContact]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: state.contacts.items.filter(contact => contact.id !== payload),\n    },\n  }),\n\n  [getFilterValue]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      filter: payload,\n    },\n  }),\n\n  [setFilteredArr]: state => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      filteredItems: state.contacts.items.filter(el =>\n        el.name.toLowerCase().includes(state.contacts.filter.toLowerCase()),\n      ),\n    },\n  }),\n\n  [setLocalData]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: payload,\n    },\n  }),\n\n  [setNotify]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      setNotify: payload,\n    },\n  }),\n\n  [removeFilteredArr]: state => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      filteredItems: null,\n    },\n  }),\n});\n","// import { applyMiddleware, createStore } from 'redux';\n// import { phonebookReducer } from './reducers';\n// import { configureStore } from '@reduxjs/toolkit';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { logger } from '../middlewares/loggers';\n// import { authReducer } from './auth/authReducers';\n\n// const middlWares = [logger];\n\n// const store = configureStore({\n// reducer: {\n//     authReducer,\n//     phonebookReducer,\n//   },\n\n//   composeWithDevTools(applyMiddleware(...middlWares)),\n\n// },\n\n// );\n// export default store;\n\n// import { configureStore } from '@reduxjs/toolkit';\n\n/* \n!! ВТОРОЙ МЕТОД СОЗДАНИЯ СТОРА С КОМБАЙН РЕДЮСЕР\nimport { applyMiddleware, createStore, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { authReducer } from './auth/authReducers';\nimport { phonebookReducer } from './reducers';\nimport { logger } from '../middlewares/loggers'\n\nconst rootRedcer = combineReducers({\n\n  phonebook: phonebookReducer,\n  auth: authReducer ,\n\n})\n\nconst middlWares = [logger]\n\nconst store = createStore(rootRedcer, composeWithDevTools(applyMiddleware(...middlWares)));\n\n\nexport default store;\n  */\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import thunk from \"redux-thunk\"\nimport { authReducer } from './auth/authReducers';\nimport { phonebookReducer } from './reducers';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // thunk,\n];\n\nconst authPersistConfig = { key: 'token', storage, whitelist: ['token'] };\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: phonebookReducer,\n  },\n  middleware,\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store, {persistor} from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}